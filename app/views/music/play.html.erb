<div class="container mx-auto px-4 py-8">
  <div class="max-w-4xl mx-auto">
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-3xl font-bold text-gray-900">音楽再生</h1>
      <div class="flex space-x-4">
        <% if user_signed_in? %>
          <span class="text-sm text-gray-600">
            ログイン中: <%= current_user.email %>
          </span>
          <%= link_to "ログアウト", destroy_user_session_path, 
              class: "bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded",
              method: :delete %>
        <% end %>
      </div>
    </div>

    <div class="bg-white shadow rounded-lg p-6">
      <div class="text-center mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 mb-4"><%= @file_name %></h2>
        
        <div class="mb-6">
          <audio id="audio-player" controls class="w-full max-w-md mx-auto">
            <source src="<%= music_stream_path(@file_id) %>" type="audio/mpeg">
            <source src="<%= music_stream_path(@file_id) %>" type="audio/wav">
            <source src="<%= music_stream_path(@file_id) %>" type="audio/ogg">
            お使いのブラウザは音声再生に対応していません。
          </audio>
        </div>
        
        <div class="text-center mb-6">
          <p class="text-gray-600 mb-4">瞑想時間を記録しましょう</p>
          <div class="text-2xl font-bold text-blue-600 mb-4" id="timer">00:00</div>
          <div class="space-x-4">
            <button id="startBtn" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
              開始
            </button>
            <button id="pauseBtn" class="bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded" disabled>
              一時停止
            </button>
            <button id="stopBtn" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded" disabled>
              停止
            </button>
          </div>
        </div>
      </div>
      
      <% if user_signed_in? %>
        <div class="bg-gray-50 rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">瞑想記録を保存</h3>
          <%= form_with model: @meditation_record, url: meditation_records_path, local: true, class: "space-y-4" do |form| %>
            <div>
              <%= form.label :date, "日付", class: "block text-sm font-medium text-gray-700" %>
              <%= form.date_field :date, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
            </div>
            
            <div>
              <%= form.label :duration, "瞑想時間（分）", class: "block text-sm font-medium text-gray-700" %>
              <%= form.number_field :duration, id: "meditation-duration", class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
            </div>
            
            <div>
              <%= form.label :notes, "メモ", class: "block text-sm font-medium text-gray-700" %>
              <%= form.text_area :notes, rows: 3, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
            </div>
            
            <div>
              <%= form.submit "記録を保存", class: "w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
            </div>
          <% end %>
        </div>
      <% else %>
        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <p class="text-yellow-800 text-sm">
            瞑想記録を保存するには、
            <%= link_to "ログイン", new_user_session_path, 
                class: "text-yellow-600 hover:text-yellow-800 underline" %>
            または
            <%= link_to "新規登録", new_user_registration_path, 
                class: "text-yellow-600 hover:text-yellow-800 underline" %>
            してください。
          </p>
        </div>
      <% end %>
    </div>
    
    <div class="mt-8 text-center">
      <%= link_to "音楽ライブラリに戻る", music_path, 
          class: "bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded" %>
    </div>
  </div>
</div>

<script>
document.addEventListener('turbo:load', function() {
  let startTime = null;
  let elapsedTime = 0;
  let timerInterval = null;
  let isRunning = false;
  
  const timerDisplay = document.getElementById('timer');
  const startBtn = document.getElementById('startBtn');
  const pauseBtn = document.getElementById('pauseBtn');
  const stopBtn = document.getElementById('stopBtn');
  const durationInput = document.getElementById('meditation-duration');
  const audio = document.getElementById('audio-player');
  
  function formatTime(seconds) {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
  }
  
  function updateTimer() {
    if (isRunning) {
      const currentTime = Date.now();
      elapsedTime = Math.floor((currentTime - startTime) / 1000);
      timerDisplay.textContent = formatTime(elapsedTime);
      
      // 瞑想時間入力欄を更新（分単位）
      const minutes = Math.floor(elapsedTime / 60);
      if (durationInput) {
        durationInput.value = minutes;
      }
    }
  }
  
  startBtn.addEventListener('click', function() {
    if (!isRunning) {
      startTime = Date.now() - (elapsedTime * 1000);
      isRunning = true;
      timerInterval = setInterval(updateTimer, 1000);
      
      startBtn.disabled = true;
      pauseBtn.disabled = false;
      stopBtn.disabled = false;
    }
  });
  
  pauseBtn.addEventListener('click', function() {
    if (isRunning) {
      isRunning = false;
      clearInterval(timerInterval);
      
      startBtn.disabled = false;
      pauseBtn.disabled = true;
      stopBtn.disabled = false;
    }
  });
  
  stopBtn.addEventListener('click', function() {
    isRunning = false;
    clearInterval(timerInterval);
    elapsedTime = 0;
    timerDisplay.textContent = '00:00';
    
    if (durationInput) {
      durationInput.value = 0;
    }
    
    startBtn.disabled = false;
    pauseBtn.disabled = true;
    stopBtn.disabled = true;
  });

  // 音楽再生時間を瞑想時間に自動反映
  if (audio && durationInput) {
    audio.addEventListener('timeupdate', function() {
      // 再生位置（秒）を分単位で切り上げ
      const minutes = Math.ceil(audio.currentTime / 60);
      if (!isRunning) { // タイマーが動いていない場合のみ更新
        durationInput.value = minutes;
      }
    });
  }
});
</script> 